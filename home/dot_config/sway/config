include /etc/sway/config.d/50-systemd-user.conf

###:{{{ Variables
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term kitty -o allow_remote_control=yes --single-instance --listen-on unix:@mykitty 
set $menu rofi -no-config -no-lazy-grab -show run -modi run -theme ~/.config/wofi/launcher.rasi

#:}}}
###:{{{ Output configuration
output * bg /usr/share/backgrounds/teahub.io-black-wallpaper-hd-93723.png fill
default_border none
for_window [class="^.*"] border normal 2
smart_borders on
gaps inner 0
exec_always --no-startup-id kitti3 -p CC -s 1.0 1.0
bindsym $mod+n nop kitti3 

#:}}}
###:{{{ Idle configuration
#:
#: Example configuration:
#:
#: exec swayidle -w \
#:          timeout 300 'swaylock -f -c 000000' \
#:          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#:          before-sleep 'swaylock -f -c 000000'
#:
#: This will lock your screen after 300 seconds of inactivity, then turn off
#: your displays after another 300 seconds, and turn your screens back on when
#: resumed. It will also lock your screen before your computer goes to sleep.
#:}}}
###:{{{ Input configuration
  input "1133:16469:Logitech_Wireless_Mouse" {
#:       dwt enabled
      left_handed enabled
#:       tap enabled
#:       natural_scroll enabled
      middle_emulation enabled
  }
input * xkb_numlock enable
#:}}}
###{{{ Key bindings
#: Basics:
    #: Start a terminal
    bindsym $mod+Return exec $term
#: for_window [title="^terminal"] resize set width 42 ppt

    #: Kill focused window
    bindsym $mod+Shift+q kill

    #: Start your launcher
    bindsym $mod+d exec $menu

    #: Drag floating windows by holding down $mod and left mouse button.
    #: Resize them with right mouse button + $mod.
    #: Despite the name, also works for non-floating windows.
    #: Change normal to inverse to use left mouse button for resizing and right
    #: mouse button for dragging.
    floating_modifier $mod normal

    #: Reload the configuration file
    bindsym $mod+Shift+c reload

    #: Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#: Moving around:
    #: Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    #: Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    #: Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    #: Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#: Workspaces:
    #: Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    #: Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    #: Note: workspaces can have any name you want, not just numbers.
    #: We just use 1-10 as the default.
#: Layout stuff:
    #: You can "split" the current object of your focus with
    #: $mod+b or $mod+v, for horizontal and vertical splits
    #: respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    #: Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    #: Make the current focus fullscreen
    bindsym $mod+f fullscreen

    #: Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    #: Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    #: Move focus to the parent container
    bindsym $mod+a focus parent
#: Scratchpad:
    #: Sway has a "scratchpad", which is a bag of holding for windows.
    #: You can send windows there and get them back later.

    #: Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    #: Show the next scratchpad window or hide the focused scratchpad window.
    #: If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#: Resizing containers:
mode "resize" {
    #: left will shrink the containers width
    #: right will grow the containers width
    #: up will shrink the containers height
    #: down will grow the containers height
    bindsym $left resize shrink width 1px
    bindsym $down resize grow height 1px
    bindsym $up resize shrink height 1px
    bindsym $right resize grow width 1px

    #: Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    #: Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#}}}
#:{{{ Colors
#  # theme colors
# set_from_resource $bgcolor  	color4
# set_from_resource $ibgcolor	color0
# set_from_resource $textcolor	color7
# set_from_resource $ubgcolor 	color1

# # class                   border    backgr.   text        indic.   child_border
#   client.focused          $bgcolor  $bgcolor  $textcolor  $bgcolor
#   client.focused_inactive $ibgcolor $ibgcolor $textcolor  $ibgcolor
#   client.unfocused        #ibgclor  $ibgcolor $textcolor  $ibgcolor
#   client.urgent           $ubgcolor $ubgcolor $textcolor  $ubgcolor
#   client.placeholder      #000000 #0c0c0c #ffffff #000000 

#   client.background       $bgcolor

# # color palette used for the terminal ( ~/.Xresources file )
# set_from_resource $term_background background
# set_from_resource $term_foreground foreground
# set_from_resource $term_color0     color0
# set_from_resource $term_color1     color1
# set_from_resource $term_color2     color2
# set_from_resource $term_color3     color3
# set_from_resource $term_color4     color4
# set_from_resource $term_color5     color5
# set_from_resource $term_color6     color6
# set_from_resource $term_color7     color7
# set_from_resource $term_color8     color8
# set_from_resource $term_color9     color9
# set_from_resource $term_color10    color10
# set_from_resource $term_color11    color11
# set_from_resource $term_color12    color12
# set_from_resource $term_color13    color13
# set_from_resource $term_color14    color14
# set_from_resource $term_color15    color15
#:}}}
#{{{ Status Bar:
# font pango:SauceCodePro Nerd Font Mono Mono 11
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    font pango:Fira Code 11
    position top
    # tray_output primary
    # swaybar_command waybar
    # swaybar_command yambar
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M %p'; do sleep 1; done
    # status_command i3status-rs ~/.config/i3status-rs/config.toml
    status_command yambar
   colors {
       background #24283b
       statusline #f9faf9
       separator  #c0caf5

#                         border  backgr. text
       focused_workspace  #414868 #414868 #c0caf5
       active_workspace   #414868 #414868 #c0caf5
       inactive_workspace #24283b #24283b #c0caf5
       binding_mode       #16a085 #2C2C2C #F9FAF9
       urgent_workspace   #f7768e #f7768e #c0caf5
   }
}
exec --no-startup-id autotiling
exec --no-startup-id $term
exec --no-startup-id steam -silent
exec --no-startup-id discord --start-minimized
#}}}
